// Generated by the Tensor Algebra Compiler (tensor-compiler.org)

int ttm_compute() {
  out_val = 0.0;

  for (int32_t iC = C1_pos[0]; iC < C1_pos[1]; iC++) {
    for (int32_t jC = C2_pos[iC]; jC < C2_pos[(iC + 1)]; jC++) {
      for (int32_t kA = A1_pos[0]; kA < A1_pos[1]; kA++) {
        int32_t lC = C3_pos[jC];
        int32_t pC3_end = C3_pos[(jC + 1)];
        int32_t lA = A2_pos[kA];
        int32_t pA2_end = A2_pos[(kA + 1)];

        while (lC < pC3_end && lA < pA2_end) {
          int32_t lC0 = C3_crd[lC];
          int32_t lA0 = A2_crd[lA];
          int32_t l = TACO_MIN(lC0,lA0);
          if (lC0 == l && lA0 == l) {
            out_val += C_vals[lC] * A_vals[lA];
          }
          lC += (int32_t)(lC0 == l);
          lA += (int32_t)(lA0 == l);
        }
      }
    }
  }

  out_vals[0] = out_val;
  return 0;
}
