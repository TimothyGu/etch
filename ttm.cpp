// Generated by the Tensor Algebra Compiler (tensor-compiler.org)

int ttm_compute() {
  double out_val = 0.0;

  for (int32_t iC = C1_pos[0]; iC < C1_pos[1]; iC++) {
    for (int32_t jC = C2_pos[iC]; jC < C2_pos[(iC + 1)]; jC++) {
      int32_t kC = C3_pos[jC];
      int32_t pC3_end = C3_pos[(jC + 1)];
      int32_t kA = A1_pos[0];
      int32_t pA1_end = A1_pos[1];

      while (kC < pC3_end && kA < pA1_end) {
        int32_t kC0 = C3_crd[kC];
        int32_t kA0 = A1_crd[kA];
        int32_t k = TACO_MIN(kC0,kA0);
        if (kC0 == k && kA0 == k) {
          for (int32_t lA = A2_pos[kA]; lA < A2_pos[(kA + 1)]; lA++) {
            out_val += C_vals[kC] * A_vals[lA];
          }
        }
        kC += (int32_t)(kC0 == k);
        kA += (int32_t)(kA0 == k);
      }
    }
  }

  out_vals[0] = out_val;
  return 0;
}
